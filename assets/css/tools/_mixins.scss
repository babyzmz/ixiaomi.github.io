@mixin icon-square($color) {
  display: inline-block;
  width: 0.8em;
  height: 0.85em;
  margin-right: 0.2em;
  background-color: $color;
}

@mixin triangle($color: currentColor, $direction: right, $width: 0.7em, $height: 1em) {
  $directions: (top, right, bottom, left);
  @if not index($directions, $direction) {
    @error 'Valid directions are `top`, `right`, `bottom`, `left`';
  }

  width: 0;
  height: 0;
  @if $direction == top or $direction == bottom {
    border-right: $width / 2 solid transparent;
    border-left: $width / 2 solid transparent;
  }
  @if $direction == right or $direction == left {
    border-top: $height / 2 solid transparent;
    border-bottom: $height / 2 solid transparent;
  }
  @if $direction == top {
    border-bottom: $height solid $color;
  }
  @if $direction == right {
    border-left: $width solid $color;
  }
  @if $direction == bottom {
    border-top: $height solid $color;
  }
  @if $direction == left {
    border-right: $width solid $color;
  }
}

@mixin dot($color: #fff, $size: 8px, $space: 30%) {
  background-image: radial-gradient($color $space, transparent $space),
  radial-gradient($color $space, transparent $space);
  background-position: 0 0, #{$size / 2} #{$size / 2};
  background-size: $size $size;
}

@mixin stripe($color1: #fff, $color2: #333, $size: 6px, $angle: -45deg) {
  background-image: linear-gradient(
      $angle,
      $color1 24.95%,
      $color2 25%,
      $color2 49.95%,
      $color1 50%,
      $color1 74.95%,
      $color2 75%
  );
  background-size: #{2 * $size * sqrt(2)} #{2 * $size * sqrt(2)};
}

@mixin grad-x($area_per: 70%, $color: currentColor) {
  background: linear-gradient(to right, transparent 0%, $color (100% - $area_per), $color $area_per, transparent 100%);
}

@mixin grad-bottom($color1, $color2) {
  background-image: linear-gradient(to bottom, $color1 0%, $color2 100%);
}

@mixin text-strong-shadow($blur: 5px, $color: #fff) {
  text-shadow: 2px 0px $blur $color, -2px 0px $blur $color,
  0px -2px $blur $color, -2px 0px $blur $color,
  2px 2px $blur $color, -2px 2px $blur $color,
  2px -2px $blur $color, -2px -2px $blur $color,
  2px 0px $blur $color, -2px 0px $blur $color,
  0px -2px $blur $color, -2px 0px $blur $color,
  2px 2px $blur $color, -2px 2px $blur $color,
  2px -2px $blur $color, -2px -2px $blur $color;
}

@mixin text-border($color: #fff) {
  text-shadow: $color 2px 0, $color -2px 0,
  $color 0 -2px, $color 0 2px,
  $color 2px 2px, $color -2px 2px,
  $color 2px -2px, $color -2px -2px,
  $color 1px 2px, $color -1px 2px,
  $color 1px -2px, $color -1px -2px,
  $color 2px 1px, $color -2px 1px,
  $color 2px -1px, $color -2px -1px;
}

@mixin margin-x($right: auto, $left: $right) {
  margin-right: $right;
  margin-left: $left;
}

@mixin padding-x($right, $left: $right) {
  padding-right: $right;
  padding-left: $left;
}

@mixin padding-y($top, $bottom: $top) {
  padding-top: $top;
  padding-bottom: $bottom;
}

@mixin bullet() {
  padding-left: 1em;
  text-indent: -1em;
}

@mixin text-shadow($color, $n) {
  $res: '';
  @for $i from 1 through $n {
    $res: $res + '0 0 4px #{$color}, ';
  }
  text-shadow: #{str-slice($res, 1, str-length($res) - 2)};
}

@mixin fluid-right() {
  margin-right: calc(50% - 50vw);
}

@mixin fluid-left() {
  margin-left: calc(50% - 50vw);
}

@mixin fluid() {
  @include fluid-right();
  @include fluid-left();
}

@mixin fluid-off() {
  margin-right: auto;
  margin-left: auto;
}

@mixin pos-center() {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

@mixin clearfix() {
  &::after {
    display: block;
    content: '';
    clear: both;
  }
}

@mixin spread-active-space($y: 1em, $x: 1em) {
  &::before {
    position: absolute;
    top: -#{$y};
    right: -#{$x};
    bottom: -#{$y};
    left: -#{$x};
    content: '';
    pointer-events: auto;
  }
}

@mixin visually-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
}

@mixin is-hover() {
  @media (hover: hover) {
    @content;
  }
}

@mixin hover() {
  transition: 0.4s;

  &:hover {
    @include mq(pc) {
      opacity: 0.7;
    }
  }

  &:active {
    transform: scale(0.95);
    transition: 0.2s;
  }
}

@mixin interaction(
  $selector: &,
  $addition: null,
  $active: true,
  $hover: true,
  $use-media-hover: true
) {
  @at-root {
    @if $active {
      #{$selector}:active#{$addition} {
        @content;
      }
    }

    @if $hover and $use-media-hover {
      @media (hover: hover) {
        #{$selector}:hover#{$addition} {
          @content;
        }
      }
    }

    @if $hover and (not $use-media-hover) {
      #{$selector}:hover#{$addition} {
        @content;
      }
    }
  }
}

@mixin container() {
  width: $container-width;
  max-width: $container-max-width;
  margin-right: auto;
  margin-left: auto;
}

@mixin grid() {
  display: flex;
  flex-wrap: wrap;
}

@mixin grid2() {
  display: flex;
  flex-wrap: wrap;
  &::after {
    content: '';
    display: block;
    width: 50%;
  }
}

@mixin col($column-num, $width: null) {
  min-width: 0;
  word-wrap: break-word;

  @if $column-num == 'auto' {
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }

  @if $column-num != 'auto' {
    @if not $width {
      $width: ($column-num / $grid-columns-num) * 100%;
    }
    flex: 0 0 $width;
    max-width: $width;
  }
}
